"use strict";(self.webpackChunkk8s_security_docs=self.webpackChunkk8s_security_docs||[]).push([[200],{7173:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"security-tools/falco","title":"Falco","description":"Falco is an open-source cloud-native runtime security tool designed to detect anomalous activity in your applications and containers.","source":"@site/docs/security-tools/falco.md","sourceDirName":"security-tools","slug":"/security-tools/falco","permalink":"/docs/security-tools/falco","draft":false,"unlisted":false,"editUrl":"https://github.com/ThopuriSeetaramaiah/k8s-security-docs/tree/main/docs/security-tools/falco.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Trivy","permalink":"/docs/security-tools/trivy"},"next":{"title":"kube-hunter","permalink":"/docs/security-tools/kube-hunter"}}');var l=s(4848),i=s(8453);const o={sidebar_position:3},a="Falco",r={},c=[{value:"Overview",id:"overview",level:2},{value:"How Falco Works",id:"how-falco-works",level:2},{value:"Installation",id:"installation",level:2},{value:"Using Helm",id:"using-helm",level:3},{value:"Using DaemonSet",id:"using-daemonset",level:3},{value:"On a Host",id:"on-a-host",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Rules Files",id:"rules-files",level:3},{value:"Outputs",id:"outputs",level:3},{value:"Default Rules",id:"default-rules",level:2},{value:"Custom Rules",id:"custom-rules",level:2},{value:"Integrations",id:"integrations",level:2},{value:"Kubernetes",id:"kubernetes",level:3},{value:"Alert Outputs",id:"alert-outputs",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debugging",id:"debugging",level:3},{value:"Next Steps",id:"next-steps",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"falco",children:"Falco"})}),"\n",(0,l.jsx)(n.p,{children:"Falco is an open-source cloud-native runtime security tool designed to detect anomalous activity in your applications and containers."}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"Falco, originally created by Sysdig and now a CNCF graduated project, acts as a security camera for your Kubernetes clusters. It continuously monitors system calls at the kernel level and alerts on suspicious behaviors based on a set of rules."}),"\n",(0,l.jsx)(n.p,{children:"Key features of Falco include:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Real-time threat detection"}),"\n",(0,l.jsx)(n.li,{children:"Kubernetes-aware security rules"}),"\n",(0,l.jsx)(n.li,{children:"Minimal performance impact"}),"\n",(0,l.jsx)(n.li,{children:"Extensive rule customization"}),"\n",(0,l.jsx)(n.li,{children:"Integration with various notification channels"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"how-falco-works",children:"How Falco Works"}),"\n",(0,l.jsx)(n.p,{children:"Falco operates by:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Monitoring system calls at the kernel level"}),"\n",(0,l.jsx)(n.li,{children:"Applying rules to detect suspicious behavior"}),"\n",(0,l.jsx)(n.li,{children:"Generating alerts when rules are triggered"}),"\n",(0,l.jsx)(n.li,{children:"Sending notifications to configured outputs"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.h3,{id:"using-helm",children:"Using Helm"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Add the Falco Helm repository\nhelm repo add falcosecurity https://falcosecurity.github.io/charts\nhelm repo update\n\n# Install Falco with default settings\nhelm install falco falcosecurity/falco --namespace falco --create-namespace\n"})}),"\n",(0,l.jsx)(n.h3,{id:"using-daemonset",children:"Using DaemonSet"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Apply the Falco DaemonSet\nkubectl apply -f https://raw.githubusercontent.com/falcosecurity/falco/master/falco.yaml\n"})}),"\n",(0,l.jsx)(n.h3,{id:"on-a-host",children:"On a Host"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# For Debian/Ubuntu\ncurl -s https://falco.org/repo/falcosecurity-3672BA8F.asc | apt-key add -\necho "deb https://download.falco.org/packages/deb stable main" | tee -a /etc/apt/sources.list.d/falcosecurity.list\napt-get update -y\napt-get install -y falco\n\n# For RHEL/CentOS\nrpm --import https://falco.org/repo/falcosecurity-3672BA8F.asc\ncurl -s -o /etc/yum.repos.d/falcosecurity.repo https://falco.org/repo/falcosecurity-rpm.repo\nyum install -y falco\n'})}),"\n",(0,l.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,l.jsxs)(n.p,{children:["Falco's main configuration file is ",(0,l.jsx)(n.code,{children:"/etc/falco/falco.yaml"}),". Key configuration sections include:"]}),"\n",(0,l.jsx)(n.h3,{id:"rules-files",children:"Rules Files"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"rules_file:\n  - /etc/falco/falco_rules.yaml\n  - /etc/falco/falco_rules.local.yaml\n  - /etc/falco/rules.d\n"})}),"\n",(0,l.jsx)(n.h3,{id:"outputs",children:"Outputs"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"stdout_output:\n  enabled: true\n\nfile_output:\n  enabled: true\n  filename: /var/log/falco.log\n\nsyslog_output:\n  enabled: true\n\nprogram_output:\n  enabled: false\n  program: \"jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/XXX\"\n"})}),"\n",(0,l.jsx)(n.h2,{id:"default-rules",children:"Default Rules"}),"\n",(0,l.jsx)(n.p,{children:"Falco comes with a comprehensive set of default rules that detect:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Privilege escalation"}),"\n",(0,l.jsx)(n.li,{children:"Container escape attempts"}),"\n",(0,l.jsx)(n.li,{children:"Unauthorized access to sensitive files"}),"\n",(0,l.jsx)(n.li,{children:"Suspicious network connections"}),"\n",(0,l.jsx)(n.li,{children:"Unexpected process execution"}),"\n",(0,l.jsx)(n.li,{children:"And many more security-relevant events"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Example rule:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"- rule: Terminal shell in container\n  desc: A shell was used as the entrypoint/exec point into a container with an attached terminal\n  condition: >\n    container.id != host and\n    proc.name = bash and\n    evt.type = execve and\n    evt.dir=< and\n    proc.tty != 0 and\n    container.image.repository != k8s.gcr.io/pause\n  output: >\n    A shell was spawned in a container with an attached terminal (user=%user.name\n    container_id=%container.id container_name=%container.name shell=%proc.name parent=%proc.pname\n    cmdline=%proc.cmdline terminal=%proc.tty container_image=%container.image.repository:%container.image.tag)\n  priority: NOTICE\n  tags: [container, shell, mitre_execution]\n"})}),"\n",(0,l.jsx)(n.h2,{id:"custom-rules",children:"Custom Rules"}),"\n",(0,l.jsx)(n.p,{children:"You can create custom rules to detect specific behaviors relevant to your environment:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"# /etc/falco/falco_rules.local.yaml\n- rule: Custom - Sensitive File Access\n  desc: Detect access to sensitive configuration files\n  condition: >\n    open_read and\n    fd.name startswith /etc/myapp/secrets and\n    not proc.name in (myapp, myapp-agent)\n  output: >\n    Sensitive file accessed by non-authorized process\n    (user=%user.name command=%proc.cmdline file=%fd.name)\n  priority: WARNING\n  tags: [file, mitre_credential_access]\n"})}),"\n",(0,l.jsx)(n.h2,{id:"integrations",children:"Integrations"}),"\n",(0,l.jsx)(n.h3,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,l.jsx)(n.p,{children:"Falco can be deployed as a DaemonSet to monitor all nodes in your cluster:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: falco\n  namespace: falco\nspec:\n  selector:\n    matchLabels:\n      app: falco\n  template:\n    metadata:\n      labels:\n        app: falco\n    spec:\n      containers:\n      - name: falco\n        image: falcosecurity/falco:latest\n        securityContext:\n          privileged: true\n        volumeMounts:\n        - name: dev\n          mountPath: /host/dev\n        - name: proc\n          mountPath: /host/proc\n        - name: boot\n          mountPath: /host/boot\n        - name: lib-modules\n          mountPath: /host/lib/modules\n        - name: usr\n          mountPath: /host/usr\n        - name: etc\n          mountPath: /host/etc\n      volumes:\n      - name: dev\n        hostPath:\n          path: /dev\n      - name: proc\n        hostPath:\n          path: /proc\n      - name: boot\n        hostPath:\n          path: /boot\n      - name: lib-modules\n        hostPath:\n          path: /lib/modules\n      - name: usr\n        hostPath:\n          path: /usr\n      - name: etc\n        hostPath:\n          path: /etc\n"})}),"\n",(0,l.jsx)(n.h3,{id:"alert-outputs",children:"Alert Outputs"}),"\n",(0,l.jsx)(n.p,{children:"Falco supports various output methods:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Slack"}),"\n",(0,l.jsx)(n.li,{children:"Discord"}),"\n",(0,l.jsx)(n.li,{children:"Email"}),"\n",(0,l.jsx)(n.li,{children:"PagerDuty"}),"\n",(0,l.jsx)(n.li,{children:"Custom webhooks"}),"\n",(0,l.jsx)(n.li,{children:"NATS"}),"\n",(0,l.jsx)(n.li,{children:"gRPC"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Example Slack integration:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"program_output:\n  enabled: true\n  program: \"jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/YOUR_WEBHOOK_URL\"\n"})}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Start with default rules"}),": Begin with the default ruleset and customize as needed"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Tune rules for your environment"}),": Adjust rules to reduce false positives"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use priority levels effectively"}),": Configure different notification channels based on alert priority"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Implement proper alert handling"}),": Ensure alerts are routed to the right teams"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Update regularly"}),": Keep Falco and its rules updated to detect the latest threats"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Monitor Falco's performance"}),": Ensure it's not impacting your workloads"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"High CPU usage"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Tune rules to be more specific"}),"\n",(0,l.jsx)(n.li,{children:"Increase the syscall buffer size"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Missing events"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Check if the kernel module is loaded"}),"\n",(0,l.jsx)(n.li,{children:"Verify Falco service is running"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"False positives"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Customize rules to exclude legitimate behavior"}),"\n",(0,l.jsx)(n.li,{children:"Use lists to define allowed processes or files"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"debugging",children:"Debugging"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Check Falco status\nsystemctl status falco\n\n# View Falco logs\njournalctl -u falco\n\n# Test rules syntax\nfalco -L\n\n# Run in debug mode\nfalco -d\n"})}),"\n",(0,l.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsxs)(n.p,{children:["After implementing Falco for runtime security monitoring, consider using ",(0,l.jsx)(n.a,{href:"kube-hunter",children:"kube-hunter"})," to actively test your cluster for security vulnerabilities."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const l={},i=t.createContext(l);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);