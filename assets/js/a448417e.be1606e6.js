"use strict";(self.webpackChunkk8s_security_docs=self.webpackChunkk8s_security_docs||[]).push([[3393],{8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function c(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:n},e.children)}},9880:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"security-tools/kube-bench","title":"kube-bench","description":"kube-bench is an open-source tool that checks whether Kubernetes is deployed according to security best practices as defined in the CIS Kubernetes Benchmark.","source":"@site/docs/security-tools/kube-bench.md","sourceDirName":"security-tools","slug":"/security-tools/kube-bench","permalink":"/docs/security-tools/kube-bench","draft":false,"unlisted":false,"editUrl":"https://github.com/ThopuriSeetaramaiah/k8s-security-docs/tree/main/docs/security-tools/kube-bench.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Role-Based Access Control (RBAC)","permalink":"/docs/best-practices/rbac"},"next":{"title":"Trivy","permalink":"/docs/security-tools/trivy"}}');var t=s(4848),r=s(8453);const c={sidebar_position:1},o="kube-bench",l={},a=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Using kubectl",id:"using-kubectl",level:3},{value:"Using Docker",id:"using-docker",level:3},{value:"On the Host",id:"on-the-host",level:3},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Specify Kubernetes Version",id:"specify-kubernetes-version",level:3},{value:"Run Specific Tests",id:"run-specific-tests",level:3},{value:"Output Formats",id:"output-formats",level:3},{value:"Understanding Results",id:"understanding-results",level:2},{value:"Example Output",id:"example-output",level:2},{value:"Remediation",id:"remediation",level:2},{value:"Integration with CI/CD",id:"integration-with-cicd",level:2},{value:"Example GitHub Actions Workflow",id:"example-github-actions-workflow",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Next Steps",id:"next-steps",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"kube-bench",children:"kube-bench"})}),"\n",(0,t.jsx)(n.p,{children:"kube-bench is an open-source tool that checks whether Kubernetes is deployed according to security best practices as defined in the CIS Kubernetes Benchmark."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The Center for Internet Security (CIS) Kubernetes Benchmark provides security recommendations for configuring Kubernetes components. kube-bench automates the process of checking your cluster against these recommendations."}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.h3,{id:"using-kubectl",children:"Using kubectl"}),"\n",(0,t.jsx)(n.p,{children:"You can run kube-bench as a job in your Kubernetes cluster:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job.yaml\n"})}),"\n",(0,t.jsx)(n.p,{children:"To view the results:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl logs job.batch/kube-bench\n"})}),"\n",(0,t.jsx)(n.h3,{id:"using-docker",children:"Using Docker"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker run --rm -v `pwd`:/tmp/results aquasec/kube-bench:latest --outputfile /tmp/results/kube-bench-results.json --json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"on-the-host",children:"On the Host"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Download the latest release\ncurl -L https://github.com/aquasecurity/kube-bench/releases/download/v0.6.10/kube-bench_0.6.10_linux_amd64.tar.gz -o kube-bench_0.6.10_linux_amd64.tar.gz\n\n# Extract the downloaded file\ntar -xvf kube-bench_0.6.10_linux_amd64.tar.gz\n\n# Run kube-bench\n./kube-bench\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kube-bench\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will automatically detect your Kubernetes version and run the appropriate checks."}),"\n",(0,t.jsx)(n.h3,{id:"specify-kubernetes-version",children:"Specify Kubernetes Version"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kube-bench --version 1.24\n"})}),"\n",(0,t.jsx)(n.h3,{id:"run-specific-tests",children:"Run Specific Tests"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run only control plane checks\nkube-bench run --targets master\n\n# Run only node checks\nkube-bench run --targets node\n\n# Run only etcd checks\nkube-bench run --targets etcd\n"})}),"\n",(0,t.jsx)(n.h3,{id:"output-formats",children:"Output Formats"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# JSON output\nkube-bench --json\n\n# YAML output\nkube-bench --yaml\n\n# JUnit output\nkube-bench --junit\n"})}),"\n",(0,t.jsx)(n.h2,{id:"understanding-results",children:"Understanding Results"}),"\n",(0,t.jsx)(n.p,{children:"kube-bench results are organized by control sections from the CIS Benchmark:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Control Plane Security Configuration"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"etcd Node Configuration"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Control Plane Configuration"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Worker Node Security Configuration"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Kubernetes Policies"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Each check has a status:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PASS"}),": The check passed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"FAIL"}),": The check failed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"WARN"}),": The check needs manual verification"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"INFO"}),": Informational only"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-output",children:"Example Output"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"[INFO] 1 Master Node Security Configuration\n[INFO] 1.1 Master Node Configuration Files\n[PASS] 1.1.1 Ensure that the API server pod specification file permissions are set to 644 or more restrictive\n[PASS] 1.1.2 Ensure that the API server pod specification file ownership is set to root:root\n[FAIL] 1.1.3 Ensure that the controller manager pod specification file permissions are set to 644 or more restrictive\n"})}),"\n",(0,t.jsx)(n.h2,{id:"remediation",children:"Remediation"}),"\n",(0,t.jsx)(n.p,{children:"For each failed check, kube-bench provides remediation steps. For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"[FAIL] 1.1.3 Ensure that the controller manager pod specification file permissions are set to 644 or more restrictive\nRemediation: Run the following command:\nchmod 644 /etc/kubernetes/manifests/kube-controller-manager.yaml\n"})}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-cicd",children:"Integration with CI/CD"}),"\n",(0,t.jsx)(n.p,{children:"You can integrate kube-bench into your CI/CD pipeline to ensure your clusters meet security standards before deployment."}),"\n",(0,t.jsx)(n.h3,{id:"example-github-actions-workflow",children:"Example GitHub Actions Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'name: Kubernetes Security Scan\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  kube-bench:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v2\n    \n    - name: Set up Kubernetes cluster\n      uses: engineerd/setup-kind@v0.5.0\n    \n    - name: Run kube-bench\n      run: |\n        kubectl apply -f https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job.yaml\n        sleep 30\n        kubectl logs job.batch/kube-bench > kube-bench-results.txt\n    \n    - name: Check for failures\n      run: |\n        if grep -q "\\[FAIL\\]" kube-bench-results.txt; then\n          echo "kube-bench found security issues"\n          exit 1\n        fi\n'})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run regularly"}),": Schedule regular kube-bench scans to ensure ongoing compliance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prioritize remediation"}),": Focus on high-risk findings first"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Document exceptions"}),": If you can't remediate certain findings, document why"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test in non-production"}),": Run kube-bench in development environments before production"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automate remediation"}),": Create scripts to automatically fix common issues"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"kube-bench checks configurations but cannot detect runtime security issues"}),"\n",(0,t.jsx)(n.li,{children:"Some checks require manual verification"}),"\n",(0,t.jsx)(n.li,{children:"Results may vary depending on your Kubernetes distribution"}),"\n",(0,t.jsx)(n.li,{children:"Not all checks apply to all environments (especially managed Kubernetes services)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.p,{children:["After running kube-bench and addressing findings, consider using ",(0,t.jsx)(n.a,{href:"trivy",children:"Trivy"})," to scan your container images for vulnerabilities."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);